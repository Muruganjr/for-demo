name: Build, Publish, and Deploy Docker Image

on:
  push:
    branches: ['master']

jobs:
  build_push_deploy:
    name: Build, Push Docker Image to Docker Hub, and Deploy to AWS EC2
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repo
      - name: Check out the repo
        uses: actions/checkout@v3
      
      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Step 3: Extract metadata (tags, labels) for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: muruganjr/demoapp
      
      # Step 4: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Step 5: Set up SSH key for EC2
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      # Step 6: Deploy Docker image to EC2
      - name: Deploy Docker image to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu # or the appropriate user for your EC2 instance
        run: |
          # Upload docker-compose.yml to EC2
          scp -o StrictHostKeyChecking=no -i /tmp/id_rsa docker-compose.yml $EC2_USER@$EC2_HOST:/home/ubuntu/docker-compose.yml
          
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa $EC2_USER@$EC2_HOST << 'EOF'
            set -e
            docker pull muruganjr/demoapp:master || { echo 'Docker pull failed'; exit 1; }
            docker-compose -f /home/ubuntu/docker-compose.yml up -d || { echo 'Docker Compose failed'; exit 1; }
          EOF
